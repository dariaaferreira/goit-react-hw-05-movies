{"version":3,"file":"static/js/720.7b0a3a81.chunk.js","mappings":"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","sources":["api/movieApi.js","components/MoviesItem/MoviesItem.styled.jsx","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["const API_KEY = \"8bbca68b0ae3741f3662f327be8188fc\";\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error);\n  }\n};\n\nexport const getByMovieId = async (movieId) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movie details:', error);\n  }\n};\n\nexport const getMovieCast = async (movieId) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching cast details:', error);\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching reviews:', error);\n  }\n};\n\nexport const getSearchMovies = async (movie) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${movie}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching search movies:', error);\n  }\n};","import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  width: 400px;\n    border-radius: 10px;\n    box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\n    transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n    &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  border-radius: 10px 10px 0 0;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const MovieTitle = styled.h3`\n  padding: 10px;\n  color: black;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport { MovieTitle, MovieImg, MovieItem } from './MoviesItem.styled'\n\nexport const MoviesItem = ({\n  movie: { id, poster_path, original_title, original_name },\n}) => {\n  const location = useLocation();\n\n  return (\n    <MovieItem>\n      <Link \n        state={{ from: location }} to={`/movies/${id}`} \n        style={{ textDecoration: 'none' }}>\n        <MovieImg\n          src={\n            poster_path\n              ? \"https://image.tmdb.org/t/p/w500\" + poster_path\n              : \"https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg\"\n          }\n          alt={original_title || original_name}\n        />\n        <MovieTitle>{original_title || original_name}</MovieTitle>\n      </Link>\n    </MovieItem>\n  );\n};","import styled from \"@emotion/styled\";\n\nexport const MovieCards = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 60px);\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n  grid-gap: 20px;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;","import React, { Suspense } from \"react\";\nimport { MoviesItem } from \"../MoviesItem/MoviesItem\";\nimport Loader from \"components/Loader/Loader\";\nimport { MovieCards } from \"./MoviesList.styled\";\n\nconst MoviesList = ({ movies, isResults }) => {\n\n  return (\n    <div>\n      <Suspense fallback={<Loader />}>\n        {isResults ? (\n          <p>Немає результатів пошуку.</p>\n        ) : (\n          <MovieCards>\n            {movies.map((movie) => {\n              return <MoviesItem key={movie.id} movie={movie} />;\n            })}\n          </MovieCards>\n        )}\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesList;","import styled from \"@emotion/styled\";\n\nexport const SearchFormBar = styled.form`\n    display: flex;\n    align-items: center;\n    width: 300px;\n    height: 40px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n  \nexport const SearchFormButton =  styled.button`\n    display: inline-block;\n    margin-left: 5px;\n    width: 60px;\n    height: 40px;\n    border: 0;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n      opacity: 1;\n    }\n`;\n\nexport const SearchFormInput =  styled.input`\n    display: inline-block;\n    width: 200px;\n    height: 35px;\n    font: inherit;\n\n    border: 1px black solid;\n    padding-left: 4px;\n    padding-right: 4px;\n`;","import React from \"react\";\n\nimport { SearchFormBar, SearchFormButton, SearchFormInput } from \"./SearchForm.styled\"\n\nconst SearchForm = ({ searchInput, handleSearchChange, handleSearchSubmit }) => {\n  return (\n    <SearchFormBar onSubmit={handleSearchSubmit}>\n      <SearchFormInput \n          type=\"text\" \n          name=\"search\"\n          value={searchInput} \n          placeholder=\"Enter movie name...\"\n          onChange={handleSearchChange} />\n      <SearchFormButton type=\"submit\">Search</SearchFormButton>\n    </SearchFormBar>\n  );\n};\n\nexport default SearchForm;","import styled from \"@emotion/styled\";\n\nexport const SearchbarContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 20px;\n  padding: 20px;\n`;\n\nexport const SearchContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n`;","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getSearchMovies } from \"../../api/movieApi\";\nimport SearchForm from \"../../components/SearchForm/SearchForm\";\nimport MoviesList from \"../../components/MoviesList/MoviesList\";\nimport Loader from \"components/Loader/Loader\";\nimport { SearchbarContainer, SearchContainer } from \"./Movies.styled\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isResults, setIsResults] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  const query = searchParams.get(\"query\");\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const searchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getSearchMovies(query);\n        const results = data.results;\n\n        if (results.length < 1) {\n          setMovies([]);\n          setIsResults(true);\n        } else {\n          setMovies(results);\n          setIsResults(false);\n        }\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    searchMovies();\n  }, [query]);\n\n  const handleSearchChange = (event) => {\n    setSearchInput(event.target.value);\n  };\n\n  const handleSearchSubmit = async (event) => {\n    event.preventDefault();\n    setSearchParams({ query: searchInput.toLowerCase() });\n    setSearchInput(\"\");\n  };\n\n  return (\n    <>\n      <SearchContainer>\n        <SearchForm\n        searchInput={searchInput}\n        handleSearchChange={handleSearchChange}\n        handleSearchSubmit={handleSearchSubmit}\n        />\n      </SearchContainer>\n      <SearchbarContainer>\n      {query && (\n        <div>\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <MoviesList movies={movies} isResults={isResults} />\n            )}\n        </div>\n      )}\n    </SearchbarContainer>\n    </>\n\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","json","data","results","console","log","getByMovieId","movieId","getMovieCast","getMovieReviews","getSearchMovies","movie","MovieItem","styled","MovieImg","MovieTitle","MoviesItem","id","poster_path","original_title","original_name","location","useLocation","state","from","to","style","textDecoration","src","alt","MovieCards","movies","isResults","Suspense","fallback","Loader","map","SearchFormBar","SearchFormButton","SearchFormInput","searchInput","handleSearchChange","handleSearchSubmit","onSubmit","type","name","value","placeholder","onChange","SearchbarContainer","SearchContainer","useSearchParams","searchParams","setSearchParams","useState","setMovies","setIsResults","isLoading","setIsLoading","setSearchInput","query","get","useEffect","searchMovies","length","error","event","preventDefault","toLowerCase","target","MoviesList"],"sourceRoot":""}