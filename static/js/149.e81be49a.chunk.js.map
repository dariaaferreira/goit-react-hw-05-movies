{"version":3,"file":"static/js/149.e81be49a.chunk.js","mappings":"ySAAMA,EAAU,mCACVC,EAAW,+BAEJC,EAAmB,mCAAG,+GAERC,MAAM,GAAD,OACvBF,EADuB,uCACgBD,IAHb,cAEzBI,EAFyB,gBAKZA,EAASC,OALG,cAKzBC,EALyB,yBAMxBA,EAAKC,SANmB,kCAQ/BC,QAAQC,IAAI,kCAAZ,MAR+B,0DAAH,qDAYnBC,EAAY,mCAAG,WAAOC,GAAP,kGAEDR,MAAM,GAAD,OACvBF,EADuB,kBACLU,EADK,oBACcX,IAHlB,cAElBI,EAFkB,gBAKLA,EAASC,OALJ,cAKlBC,EALkB,yBAMjBA,GANiB,kCAQxBE,QAAQC,IAAI,gCAAZ,MARwB,0DAAH,sDAYZG,EAAY,mCAAG,WAAOD,GAAP,kGAEDR,MAAM,GAAD,OACvBF,EADuB,kBACLU,EADK,4BACsBX,IAH1B,cAElBI,EAFkB,gBAKLA,EAASC,OALJ,cAKlBC,EALkB,yBAMjBA,GANiB,kCAQxBE,QAAQC,IAAI,+BAAZ,MARwB,0DAAH,sDAYZI,EAAe,mCAAG,WAAOF,GAAP,kGAEJR,MAAM,GAAD,OACvBF,EADuB,kBACLU,EADK,4BACsBX,IAHvB,cAErBI,EAFqB,gBAKRA,EAASC,OALD,cAKrBC,EALqB,yBAMpBA,GANoB,kCAQ3BE,QAAQC,IAAI,0BAAZ,MAR2B,0DAAH,sDAYfK,EAAe,mCAAG,WAAOC,GAAP,kGAEJZ,MAAM,GAAD,OACvBF,EADuB,iCACUD,EADV,kBAC2Be,IAH5B,cAErBX,EAFqB,gBAKRA,EAASC,OALD,cAKrBC,EALqB,yBAMpBA,GANoB,kCAQ3BE,QAAQC,IAAI,gCAAZ,MAR2B,0DAAH,qD,kGCjDfO,EAAa,SAAC,GAEpB,IAAD,IADJD,MAASE,EACL,EADKA,GAAIC,EACT,EADSA,YAAaC,EACtB,EADsBA,eAAgBC,EACtC,EADsCA,cAEpCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,UAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMH,GAAYI,GAAE,kBAAaR,GAAhD,WACE,gBACES,IACER,EACI,kCAAoCA,EACpC,kHAENS,IAAKR,GAAkBC,KAEzB,wBAAKD,GAAkBC,QAI9B,E,UCCD,EAnBmB,SAAC,GAA2B,IAAzBQ,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAE5B,OACE,0BACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,SACGH,GACC,uBAAG,6IAEH,wBACGD,EAAOK,KAAI,SAAClB,GACX,OAAO,SAACC,EAAD,CAA2BD,MAAOA,GAAjBA,EAAME,GAC/B,SAMZ,C,qJCLD,EAdmB,SAAC,GAA6D,IAA3DiB,EAA0D,EAA1DA,YAAaC,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,mBACrD,OACE,kBAAMC,SAAUD,EAAhB,WACE,kBACIE,KAAK,OACLC,KAAK,SACLC,MAAON,EACPO,YAAY,sBACZC,SAAUP,KACd,mBAAQG,KAAK,SAAb,SAAsB,aAG3B,E,oBC+DD,EAtEe,WACb,OAAwCK,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAemB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOjB,EAAP,KAAkBmB,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOZ,EAAP,KAAoBiB,EAApB,KAEMC,EAAQR,EAAaS,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAY,mCAAG,sGAEjBL,GAAa,GAFI,UAGEpC,EAAAA,EAAAA,IAAgBsC,GAHlB,OAGX9C,EAHW,QAIXC,EAAUD,EAAKC,SAETiD,OAAS,GACnBT,EAAU,IACVC,GAAa,KAEbD,EAAUxC,GACVyC,GAAa,IAXE,gDAcjBxC,QAAQiD,MAAR,MAdiB,yBAgBjBP,GAAa,GAhBI,4EAAH,qDAoBlBK,GAtBC,CAuBF,GAAE,CAACH,IAEJ,IAIMhB,EAAkB,mCAAG,WAAOsB,GAAP,iEACzBA,EAAMC,iBACNd,EAAgB,CAAEO,MAAOlB,EAAY0B,gBACrCT,EAAe,IAHU,2CAAH,sDAMxB,OACE,4BACE,SAAC,EAAD,CACEjB,YAAaA,EACbC,mBAdqB,SAACuB,GAC1BP,EAAeO,EAAMG,OAAOrB,MAC7B,EAaKJ,mBAAoBA,IAGrBgB,IACC,0BACE,SAAC,EAAAtB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,SACGiB,GACC,SAACjB,EAAA,EAAD,KAEA,SAAC8B,EAAA,EAAD,CAAYlC,OAAQA,EAAQC,UAAWA,UAOpD,C,uBC3ED,SAASkC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB9B,EAAQ+B,EAAK/B,KAInB,CAHE,MAAOiB,GAEP,YADAS,EAAOT,EAET,CACIc,EAAKC,KACPP,EAAQzB,GAERiC,QAAQR,QAAQzB,GAAOkC,KAAKP,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAM3B,GACbuB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ5B,EAClE,CACA,SAAS4B,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C","sources":["api/movieApi.js","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = \"8bbca68b0ae3741f3662f327be8188fc\";\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error);\n  }\n};\n\nexport const getByMovieId = async (movieId) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movie details:', error);\n  }\n};\n\nexport const getMovieCast = async (movieId) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching cast details:', error);\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching reviews:', error);\n  }\n};\n\nexport const getSearchMovies = async (movie) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${movie}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching search movies:', error);\n  }\n};","import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesItem = ({\n  movie: { id, poster_path, original_title, original_name },\n}) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        <img\n          src={\n            poster_path\n              ? \"https://image.tmdb.org/t/p/w500\" + poster_path\n              : \"https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg\"\n          }\n          alt={original_title || original_name}\n        />\n        <h3>{original_title || original_name}</h3>\n      </Link>\n    </div>\n  );\n};","import React, { Suspense } from \"react\";\nimport { MoviesItem } from \"../MoviesItem/MoviesItem\";\nimport Loader from \"components/Loader/Loader\";\n\nconst MoviesList = ({ movies, isResults }) => {\n\n  return (\n    <div>\n      <Suspense fallback={<Loader />}>\n        {isResults ? (\n          <p>Немає результатів пошуку.</p>\n        ) : (\n          <ul>\n            {movies.map((movie) => {\n              return <MoviesItem key={movie.id} movie={movie} />;\n            })}\n          </ul>\n        )}\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesList;","import React from \"react\";\n\nconst SearchForm = ({ searchInput, handleSearchChange, handleSearchSubmit }) => {\n  return (\n    <form onSubmit={handleSearchSubmit}>\n      <input \n          type=\"text\" \n          name=\"search\"\n          value={searchInput} \n          placeholder=\"Enter movie name...\"\n          onChange={handleSearchChange} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;","import { useState, useEffect, Suspense } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getSearchMovies } from \"../api/movieApi\";\nimport SearchForm from \"../components/SearchForm/SearchForm\";\nimport MoviesList from \"../components/MoviesList/MoviesList\";\nimport Loader from \"components/Loader/Loader\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isResults, setIsResults] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  const query = searchParams.get(\"query\");\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const searchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getSearchMovies(query);\n        const results = data.results;\n\n        if (results.length < 1) {\n          setMovies([]);\n          setIsResults(true);\n        } else {\n          setMovies(results);\n          setIsResults(false);\n        }\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    searchMovies();\n  }, [query]);\n\n  const handleSearchChange = (event) => {\n    setSearchInput(event.target.value);\n  };\n\n  const handleSearchSubmit = async (event) => {\n    event.preventDefault();\n    setSearchParams({ query: searchInput.toLowerCase() });\n    setSearchInput(\"\");\n  };\n\n  return (\n    <div>\n      <SearchForm\n        searchInput={searchInput}\n        handleSearchChange={handleSearchChange}\n        handleSearchSubmit={handleSearchSubmit}\n      />\n\n      {query && (\n        <div>\n          <Suspense fallback={<Loader />}>\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <MoviesList movies={movies} isResults={isResults} />\n            )}\n          </Suspense>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","json","data","results","console","log","getByMovieId","movieId","getMovieCast","getMovieReviews","getSearchMovies","movie","MoviesItem","id","poster_path","original_title","original_name","location","useLocation","state","from","to","src","alt","movies","isResults","Suspense","fallback","Loader","map","searchInput","handleSearchChange","handleSearchSubmit","onSubmit","type","name","value","placeholder","onChange","useSearchParams","searchParams","setSearchParams","useState","setMovies","setIsResults","isLoading","setIsLoading","setSearchInput","query","get","useEffect","searchMovies","length","error","event","preventDefault","toLowerCase","target","MoviesList","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}