{"version":3,"file":"static/js/485.86182f66.chunk.js","mappings":"ySAAMA,EAAU,mCACVC,EAAW,+BAEJC,EAAmB,mCAAG,+GAERC,MAAM,GAAD,OACvBF,EADuB,uCACgBD,IAHb,cAEzBI,EAFyB,gBAKZA,EAASC,OALG,cAKzBC,EALyB,yBAMxBA,EAAKC,SANmB,kCAQ/BC,QAAQC,IAAI,kCAAZ,MAR+B,0DAAH,qDAYnBC,EAAY,mCAAG,WAAOC,GAAP,kGAEDR,MAAM,GAAD,OACvBF,EADuB,kBACLU,EADK,oBACcX,IAHlB,cAElBI,EAFkB,gBAKLA,EAASC,OALJ,cAKlBC,EALkB,yBAMjBA,GANiB,kCAQxBE,QAAQC,IAAI,gCAAZ,MARwB,0DAAH,sDAYZG,EAAY,mCAAG,WAAOD,GAAP,kGAEDR,MAAM,GAAD,OACvBF,EADuB,kBACLU,EADK,4BACsBX,IAH1B,cAElBI,EAFkB,gBAKLA,EAASC,OALJ,cAKlBC,EALkB,yBAMjBA,GANiB,kCAQxBE,QAAQC,IAAI,+BAAZ,MARwB,0DAAH,sDAYZI,EAAe,mCAAG,WAAOF,GAAP,kGAEJR,MAAM,GAAD,OACvBF,EADuB,kBACLU,EADK,4BACsBX,IAHvB,cAErBI,EAFqB,gBAKRA,EAASC,OALD,cAKrBC,EALqB,yBAMpBA,GANoB,kCAQ3BE,QAAQC,IAAI,0BAAZ,MAR2B,0DAAH,sDAYfK,EAAe,mCAAG,WAAOC,GAAP,kGAEJZ,MAAM,GAAD,OACvBF,EADuB,iCACUD,EADV,kBAC2Be,IAH5B,cAErBX,EAFqB,gBAKRA,EAASC,OALD,cAKrBC,EALqB,yBAMpBA,GANoB,kCAQ3BE,QAAQC,IAAI,gCAAZ,MAR2B,0DAAH,qD,oHCjDfO,EAAYC,EAAAA,GAAAA,GAAH,4QAUTC,EAAWD,EAAAA,GAAAA,IAAH,4JAORE,EAAaF,EAAAA,GAAAA,GAAH,+E,SCfVG,EAAa,SAAC,GAEpB,IAAD,IADJL,MAASM,EACL,EADKA,GAAIC,EACT,EADSA,YAAaC,EACtB,EADsBA,eAAgBC,EACtC,EADsCA,cAEpCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACV,EAAD,WACE,UAAC,KAAD,CACEW,MAAO,CAAEC,KAAMH,GAAYI,GAAE,kBAAaR,GAC1CS,MAAO,CAAEC,eAAgB,QAF3B,WAGE,SAACb,EAAD,CACEc,IACEV,EACI,kCAAoCA,EACpC,kHAENW,IAAKV,GAAkBC,KAEzB,SAACL,EAAD,UAAaI,GAAkBC,QAItC,E,SCxBYU,E,QAAajB,EAAAA,GAAH,oNCuBvB,EAnBmB,SAAC,GAA2B,IAAzBkB,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAE5B,OACE,0BACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,SACGH,GACC,uBAAG,6IAEH,SAACF,EAAD,UACGC,EAAOK,KAAI,SAACzB,GACX,OAAO,SAACK,EAAD,CAA2BL,MAAOA,GAAjBA,EAAMM,GAC/B,SAMZ,C,2HCrBYoB,E,QAAYxB,EAAAA,GAAH,0F,SCoBtB,EAjBa,WACX,OAA4ByB,EAAAA,EAAAA,UAAS,IAArC,eAAOP,EAAP,KAAeQ,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACR1C,EAAAA,EAAAA,MAAsB2C,KAAKF,EAC5B,GAAE,KAGD,UAACF,EAAD,YACE,0BACE,wBAAI,sBAEN,SAACK,EAAA,EAAD,CAAYX,OAAQA,MAGzB,C","sources":["api/movieApi.js","components/MoviesItem/MoviesItem.styled.jsx","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["const API_KEY = \"8bbca68b0ae3741f3662f327be8188fc\";\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error);\n  }\n};\n\nexport const getByMovieId = async (movieId) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movie details:', error);\n  }\n};\n\nexport const getMovieCast = async (movieId) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching cast details:', error);\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching reviews:', error);\n  }\n};\n\nexport const getSearchMovies = async (movie) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${movie}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching search movies:', error);\n  }\n};","import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  width: 400px;\n  border-radius: 10px;\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\n  transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  &:hover {\n  transform: scale(1.03);\n  }\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  border-radius: 10px 10px 0 0;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const MovieTitle = styled.h3`\n  padding: 10px;\n  font-size: 20px;\n  color: black;\n`;","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MovieTitle, MovieImg, MovieItem } from './MoviesItem.styled'\n\nexport const MoviesItem = ({\n  movie: { id, poster_path, original_title, original_name },\n}) => {\n  const location = useLocation();\n\n  return (\n    <MovieItem>\n      <Link \n        state={{ from: location }} to={`/movies/${id}`} \n        style={{ textDecoration: 'none' }}>\n        <MovieImg\n          src={\n            poster_path\n              ? \"https://image.tmdb.org/t/p/w500\" + poster_path\n              : \"https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg\"\n          }\n          alt={original_title || original_name}\n        />\n        <MovieTitle>{original_title || original_name}</MovieTitle>\n      </Link>\n    </MovieItem>\n  );\n};\n\nMoviesItem.propTypes = {\n  movie: PropTypes.object.isRequired,\n};","import styled from \"@emotion/styled\";\n\nexport const MovieCards = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  grid-gap: 40px;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  margin-left: 40px;\n  padding: 0;\n  list-style: none;\n`;","import React, { Suspense } from \"react\";\nimport PropTypes from 'prop-types';\nimport { MoviesItem } from \"../MoviesItem/MoviesItem\";\nimport Loader from \"components/Loader/Loader\";\nimport { MovieCards } from \"./MoviesList.styled\";\n\nconst MoviesList = ({ movies, isResults }) => {\n\n  return (\n    <div>\n      <Suspense fallback={<Loader />}>\n        {isResults ? (\n          <p>Немає результатів пошуку.</p>\n        ) : (\n          <MovieCards>\n            {movies.map((movie) => {\n              return <MoviesItem key={movie.id} movie={movie} />;\n            })}\n          </MovieCards>\n        )}\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};","import styled from \"@emotion/styled\";\n\nexport const Container = styled.h1`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\n","import React, { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { fetchTrendingMovies } from '../../api/movieApi';\nimport { Container } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(setMovies);\n  }, []);\n\n  return (\n    <Container>\n      <div>\n        <h1>Trending today</h1>\n      </div>\n      <MoviesList movies={movies} />\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","json","data","results","console","log","getByMovieId","movieId","getMovieCast","getMovieReviews","getSearchMovies","movie","MovieItem","styled","MovieImg","MovieTitle","MoviesItem","id","poster_path","original_title","original_name","location","useLocation","state","from","to","style","textDecoration","src","alt","MovieCards","movies","isResults","Suspense","fallback","Loader","map","Container","useState","setMovies","useEffect","then","MoviesList"],"sourceRoot":""}